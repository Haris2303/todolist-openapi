openapi: 3.0.3
info:
  title: Todolist RESTful API
  description: OpenAPI for Todolist RESTful API
  termsOfService: https://github.com/haris2303
  contact:
    name: Haris
    url: https://github.com/haris2303
    email: haris@gmail.com
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "1"
externalDocs:
  description: Youtube Programmer Zaman Now
  url: https://www.youtube.com/c/ProgrammerZamanNow
servers:
- url: "https://{environment}.haris.com/api/v1"
  description: Todolist RESTful API Server
  variables:
    environment:
      description: Server environment
      default: dev
      enum:
      - dev
      - qa
      - prod
paths:
  /todolist:
    get:
      tags:
      - todolist
      summary: Get all todolist
      description: Get all active todolist by default
      parameters:
      - name: include done
        in: query
        description: Is include done todolist
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
          default: false
      - name: name
        in: query
        description: Filter todolist by name
        required: false
        style: form
        explode: true
        schema:
          maxLength: 100
          minLength: 1
          type: string
          nullable: true
        examples:
          java:
            description: Example name Java
            value: Java
          php:
            description: Example name PHP
            value: PHP
      responses:
        "200":
          description: Get all todolist success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayTodolist'
              examples:
                success:
                  description: Example success get all todolist
                  value:
                  - id: "1"
                    name: Java
                    priority: 3
                    tags:
                    - Java
                    - Programming
                  - id: "2"
                    name: PHP
                    priority: 5
                    tags:
                    - PHP
                    - Programming
      security:
      - TodolistAuth: []
    post:
      tags:
      - todolist
      summary: Create new todolist
      description: Create new todolist to database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTodolist'
            examples:
              java:
                description: Example create todolist Java
                value:
                  name: Java
                  priority: 3
                  tags:
                  - Java
                  - Programming
              php:
                description: Example create todolist PHP
                value:
                  name: PHP
                  priority: 5
                  tags:
                  - PHP
                  - Programming
        required: true
      responses:
        "200":
          description: Success create todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todolist'
              examples:
                java:
                  description: Success create Java todolist
                  value:
                    id: "1"
                    name: Java
                    priority: 3
                    tags:
                    - Java
                    - Programming
                php:
                  description: Success create PHP todolist
                  value:
                    id: "2"
                    name: PHP
                    priority: 5
                    tags:
                    - PHP
                    - Programming
      security:
      - TodolistAuth: []
  /todolist/{todolistId}:
    put:
      tags:
      - todolist
      summary: Update existing todolist
      description: Update existing todolist in database
      parameters:
      - name: todolistId
        in: path
        description: Todolist id for updated
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
        examples:
          java:
            description: Example update Java
            value: "1"
          php:
            description: Example update PHP
            value: "2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTodolist'
            examples:
              java:
                description: Example update todolist Java
                value:
                  name: Java
                  priority: 3
                  tags:
                  - Java
                  - Programming
              php:
                description: Example update todolist PHP
                value:
                  name: PHP
                  priority: 5
                  tags:
                  - PHP
                  - Programming
        required: true
      responses:
        "200":
          description: Success update todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todolist'
              examples:
                java:
                  description: Success create Java todolist
                  value:
                    id: "1"
                    name: Java
                    priority: 3
                    tags:
                    - Java
                    - Programming
                php:
                  description: Success create PHP todolist
                  value:
                    id: "2"
                    name: PHP
                    priority: 5
                    tags:
                    - PHP
                    - Programming
      security:
      - TodolistAuth: []
    delete:
      tags:
      - todolist
      summary: Delete existing todolist
      description: Delete existing todolist in database
      parameters:
      - name: todolistId
        in: path
        description: Todolist id for updated
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
        examples:
          java:
            description: Example update Java
            value: "1"
          php:
            description: Example update PHP
            value: "2"
      responses:
        "200":
          description: Success delete todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                success:
                  description: Success delete todolist
                  value:
                    success: true
        "404":
          description: Failed delete not found todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                failed:
                  description: Failed delete todolist
                  value:
                    success: false
      security:
      - TodolistAuth: []
components:
  schemas:
    Todolist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priority:
          type: number
          format: int32
        tags:
          type: array
          items:
            type: string
      example:
        name: name
        id: id
        priority: 0.80082819046101150206595775671303272247314453125
        tags:
        - tags
        - tags
    CreateOrUpdateTodolist:
      type: object
      properties:
        name:
          type: string
        priority:
          type: number
          format: int32
        tags:
          type: array
          items:
            type: string
    ArrayTodolist:
      type: array
      items:
        $ref: '#/components/schemas/Todolist'
      x-schema-name: ArrayTodolist
    inline_response_200:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
  parameters:
    TodolistId:
      name: todolistId
      in: path
      description: Todolist id for updated
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 100
        minLength: 1
        type: string
      examples:
        java:
          description: Example update Java
          value: "1"
        php:
          description: Example update PHP
          value: "2"
  securitySchemes:
    TodolistAuth:
      type: apiKey
      description: Authentication for Todolist Restful API
      name: X-API-Key
      in: header
